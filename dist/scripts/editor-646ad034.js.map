{"version":3,"file":"editor-646ad034.js","mappings":"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","sources":["webpack://@bigbite/bigbite-image-comparison/external window [\"wp\",\"blocks\"]","webpack://@bigbite/bigbite-image-comparison/external window [\"wp\",\"blockEditor\"]","webpack://@bigbite/bigbite-image-comparison/external window [\"wp\",\"i18n\"]","webpack://@bigbite/bigbite-image-comparison/./src/blocks/image-comparison/components/Caption.js","webpack://@bigbite/bigbite-image-comparison/external window [\"wp\",\"components\"]","webpack://@bigbite/bigbite-image-comparison/./src/blocks/image-comparison/components/SettingsCaption.js","webpack://@bigbite/bigbite-image-comparison/./src/blocks/image-comparison/components/SettingsOverflow.js","webpack://@bigbite/bigbite-image-comparison/./src/blocks/image-comparison/components/SettingsDividerAxis.js","webpack://@bigbite/bigbite-image-comparison/./src/blocks/image-comparison/components/SettingsDividerIconGap.js","webpack://@bigbite/bigbite-image-comparison/./src/blocks/image-comparison/components/SettingsDividerBoxWidth.js","webpack://@bigbite/bigbite-image-comparison/./src/blocks/image-comparison/components/SettingsDividerBoxHeight.js","webpack://@bigbite/bigbite-image-comparison/./src/blocks/image-comparison/components/SettingsDividerThickness.js","webpack://@bigbite/bigbite-image-comparison/./src/blocks/image-comparison/components/SettingsDividerInitialPosition.js","webpack://@bigbite/bigbite-image-comparison/./src/blocks/image-comparison/components/SettingsDividerBoxBorderRadius.js","webpack://@bigbite/bigbite-image-comparison/./src/blocks/image-comparison/components/Settings.js","webpack://@bigbite/bigbite-image-comparison/./src/blocks/image-comparison/components/ContainerDivider.js","webpack://@bigbite/bigbite-image-comparison/./src/blocks/image-comparison/components/Container.js","webpack://@bigbite/bigbite-image-comparison/./src/blocks/image-comparison/index.js","webpack://@bigbite/bigbite-image-comparison/./src/blocks/image-comparison/components/Edit.js","webpack://@bigbite/bigbite-image-comparison/./src/blocks/image-comparison/components/Save.js","webpack://@bigbite/bigbite-image-comparison/./src/blocks/image-comparison-item/components/Image.js","webpack://@bigbite/bigbite-image-comparison/./src/blocks/image-comparison-item/components/AlternativeText.js","webpack://@bigbite/bigbite-image-comparison/./src/blocks/image-comparison-item/components/Settings.js","webpack://@bigbite/bigbite-image-comparison/./src/blocks/image-comparison-item/index.js","webpack://@bigbite/bigbite-image-comparison/./src/blocks/image-comparison-item/components/Edit.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","/**\n * External dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { RichText } from '@wordpress/block-editor';\n\n/**\n * Caption attribute editor\n *\n * @param {object}   props               Component props\n * @param {string}   props.caption       Caption string\n * @param {function} props.setAttributes Update block attributes\n */\nconst Caption = ({ caption, setAttributes }) => {\n  const allowedFormats = [\n    'core/link',\n    'core/bold',\n    'core/code',\n    'core/italic',\n    'core/language',\n    'core/keyboard',\n    'core/subscript',\n    'core/text-color',\n    'core/superscript',\n    'core/strikethrough',\n  ];\n\n  return (\n    <RichText\n      value={caption}\n      disableLineBreaks\n      identifier={caption}\n      tagName=\"figcaption\"\n      allowedFormats={allowedFormats}\n      className=\"wp-block-bigbite-image-comparison__caption\"\n      onChange={(value) => setAttributes({ caption: value })}\n      placeholder={__('Please enter a caption', 'bigbite-image-comparison')}\n    />\n  );\n};\n\nexport default Caption;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","/**\n * External dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { ToggleControl } from '@wordpress/components';\n\n/**\n * Setting control for the hasCaption attribute\n *\n * @param {object}   props               Component props\n * @param {bool}     props.hasCaption    Has a caption\n * @param {function} props.setAttributes Update block attributes\n */\nconst SettingsCaption = ({ hasCaption, setAttributes }) => (\n  <ToggleControl\n    checked={hasCaption}\n    label={__('Caption', 'bigbite-image-comparison')}\n    onChange={(value) => setAttributes({ hasCaption: value })}\n    help={__('Allows a caption to be added', 'bigbite-image-comparison')}\n  />\n);\n\nexport default SettingsCaption;\n","/**\n * External dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { ToggleControl } from '@wordpress/components';\n\n/**\n * Setting control for the overflow attribute\n *\n * @param {object}   props               Component props\n * @param {bool}     props.overflow      Overflow attribute\n * @param {function} props.setAttributes Update block attributes\n */\nconst SettingsOverflow = ({ overflow, setAttributes }) => (\n  <ToggleControl\n    checked={overflow}\n    label={__('Overflow', 'bigbite-image-comparison')}\n    onChange={(value) => setAttributes({ overflow: value })}\n    help={__('Allow the divider to overflow the container', 'bigbite-image-comparison')}\n  />\n);\n\nexport default SettingsOverflow;\n","/**\n * External dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n  __experimentalToggleGroupControl as ToggleGroupControl,\n  __experimentalToggleGroupControlOption as ToggleGroupControlOption,\n} from '@wordpress/components';\n\n/**\n * Setting control for the dividerAxis attribute\n *\n * @param {object}   props               Component props\n * @param {number}   props.dividerAxis   Divider axis\n * @param {function} props.setAttributes Update block attributes\n */\nconst SettingsDividerAxis = ({ dividerAxis, setAttributes }) => (\n  <ToggleGroupControl\n    isBlock\n    value={dividerAxis}\n    label={__('Divider Axis', 'bigbite-image-comparison')}\n    onChange={(value) => setAttributes({ dividerAxis: value })}\n    help={__('The axis on which the divider will be oriented', 'bigbite-image-comparison')}\n  >\n    <ToggleGroupControlOption value=\"vertical\" label={__('Vertical', 'bigbite-image-comparison')} />\n    <ToggleGroupControlOption\n      value=\"horizontal\"\n      label={__('Horizontal', 'bigbite-image-comparison')}\n    />\n  </ToggleGroupControl>\n);\n\nexport default SettingsDividerAxis;\n","/**\n * External dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { RangeControl } from '@wordpress/components';\n\n/**\n * Setting control for the dividerIconGap attribute\n *\n * @param {object}   props                Component props\n * @param {number}   props.dividerIconGap Divider icon gap\n * @param {function} props.setAttributes  Update block attributes\n */\nconst SettingsDividerIconGap = ({ dividerIconGap, setAttributes }) => (\n  <RangeControl\n    min={0}\n    step={1}\n    max={100}\n    initialPosition={dividerIconGap}\n    label={__('Icon Gap (px)', 'bigbite-image-comparison')}\n    onChange={(value) => setAttributes({ dividerIconGap: value })}\n  />\n);\n\nexport default SettingsDividerIconGap;\n","/**\n * External dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { RangeControl } from '@wordpress/components';\n\n/**\n * Setting control for the dividerBoxWidth attribute\n *\n * @param {object}   props                 Component props\n * @param {number}   props.dividerBoxWidth Divider box width\n * @param {function} props.setAttributes   Update block attributes\n */\nconst SettingsDividerBoxWidth = ({ dividerBoxWidth, setAttributes }) => (\n  <RangeControl\n    min={32}\n    step={1}\n    max={128}\n    initialPosition={dividerBoxWidth}\n    label={__('Box Width (px)', 'bigbite-image-comparison')}\n    onChange={(value) => setAttributes({ dividerBoxWidth: value })}\n  />\n);\n\nexport default SettingsDividerBoxWidth;\n","/**\n * External dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { RangeControl } from '@wordpress/components';\n\n/**\n * Setting control for the dividerBoxHeight attribute\n *\n * @param {object}   props                  Component props\n * @param {number}   props.dividerBoxHeight Divider box height\n * @param {function} props.setAttributes    Update block attributes\n */\nconst SettingsDividerBoxHeight = ({ dividerBoxHeight, setAttributes }) => (\n  <RangeControl\n    min={32}\n    step={1}\n    max={128}\n    initialPosition={dividerBoxHeight}\n    label={__('Box Height (px)', 'bigbite-image-comparison')}\n    onChange={(value) => setAttributes({ dividerBoxHeight: value })}\n  />\n);\n\nexport default SettingsDividerBoxHeight;\n","/**\n * External dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { RangeControl } from '@wordpress/components';\n\n/**\n * Setting control for the dividerThickness attribute\n *\n * @param {object}   props                  Component props\n * @param {number}   props.dividerThickness Divider thickness\n * @param {function} props.setAttributes    Update block attributes\n */\nconst SettingsDividerThickness = ({ dividerThickness, setAttributes }) => (\n  <RangeControl\n    min={0}\n    max={64}\n    step={1}\n    initialPosition={dividerThickness}\n    label={__('Thickness (px)', 'bigbite-image-comparison')}\n    onChange={(value) => setAttributes({ dividerThickness: value })}\n  />\n);\n\nexport default SettingsDividerThickness;\n","/**\n * External dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { RangeControl } from '@wordpress/components';\n\n/**\n * Setting control for the dividerInitialPosition attribute\n *\n * @param {object}   props                        Component props\n * @param {number}   props.dividerInitialPosition Dividers initial position\n * @param {function} props.setAttributes          Update block attributes\n */\nconst SettingsDividerInitialPosition = ({ dividerInitialPosition, setAttributes }) => (\n  <RangeControl\n    min={0}\n    step={1}\n    max={100}\n    initialPosition={dividerInitialPosition}\n    label={__('Divider Initial Position', 'bigbite-image-comparison')}\n    onChange={(value) => setAttributes({ dividerInitialPosition: value })}\n  />\n);\n\nexport default SettingsDividerInitialPosition;\n","/**\n * External dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { RangeControl } from '@wordpress/components';\n\n/**\n * Setting control for the dividerBoxBorderRadius attribute\n *\n * @param {object}   props                        Component props\n * @param {object}   props.dividerBoxBorderRadius Divider box border radius\n * @param {function} props.setAttributes          Update block attributes\n */\nconst SettingsDividerBoxBorderRadius = ({ dividerBoxBorderRadius, setAttributes }) => (\n  <RangeControl\n    min={0}\n    max={64}\n    step={1}\n    initialPosition={dividerBoxBorderRadius?.top}\n    label={__('Border Radius (px)', 'bigbite-image-comparison')}\n    onChange={(value) =>\n      setAttributes({\n        dividerBoxBorderRadius: {\n          top: value,\n          right: value,\n          bottom: value,\n          left: value,\n        },\n      })\n    }\n  />\n);\n\nexport default SettingsDividerBoxBorderRadius;\n","/**\n * External dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { PanelBody } from '@wordpress/components';\nimport {\n  withColors,\n  ContrastChecker,\n  InspectorControls,\n  __experimentalColorGradientSettingsDropdown as ColorGradientSettingsDropdown,\n  __experimentalUseMultipleOriginColorsAndGradients as useMultipleOriginColorsAndGradients,\n} from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport SettingsCaption from './SettingsCaption';\nimport SettingsOverflow from './SettingsOverflow';\nimport SettingsDividerAxis from './SettingsDividerAxis';\nimport SettingsDividerIconGap from './SettingsDividerIconGap';\nimport SettingsDividerBoxWidth from './SettingsDividerBoxWidth';\nimport SettingsDividerBoxHeight from './SettingsDividerBoxHeight';\nimport SettingsDividerThickness from './SettingsDividerThickness';\nimport SettingsDividerInitialPosition from './SettingsDividerInitialPosition';\nimport SettingsDividerBoxBorderRadius from './SettingsDividerBoxBorderRadius';\n\n/**\n * Renders block inspector controls sidebar\n *\n * @param {object}   props                      Component props\n * @param {object}   props.attributes           Block attributes\n * @param {function} props.setAttributes        Update block attributes\n * @param {string}   props.clientId             Client ID\n * @param {string}   props.dividerColour        Divider colour\n * @param {function} props.setDividerColour     Set divider colour\n * @param {string}   props.dividerBoxColour     Divider box colour\n * @param {function} props.setDividerBoxColour  Set divider box colour\n * @param {string}   props.dividerIconColour    Divider icon colour\n * @param {function} props.setDividerIconColour Set divider icon colour\n */\nconst Settings = ({\n  attributes: {\n    overflow,\n    dividerInitialPosition,\n    dividerAxis,\n    dividerThickness,\n    customDividerColour,\n    customDividerBoxColour,\n    dividerBoxWidth,\n    dividerBoxHeight,\n    dividerBoxBorderRadius,\n    customDividerIconColour,\n    dividerIconGap,\n    hasCaption,\n    customCaptionTextColour,\n    customCaptionBackgroundColour,\n  },\n  setAttributes,\n  clientId,\n  dividerColour,\n  setDividerColour,\n  dividerBoxColour,\n  setDividerBoxColour,\n  dividerIconColour,\n  setDividerIconColour,\n  captionTextColour,\n  setCaptionTextColour,\n  captionBackgroundColour,\n  setCaptionBackgroundColour,\n}) => {\n  // extra required settings for experimental `ColorGradientSettingsDropdown`\n  const { colors, disableCustomColors } = useMultipleOriginColorsAndGradients();\n\n  // custom colour settings for use with experimental `ColorGradientSettingsDropdown`\n  const colourSettings = [\n    {\n      label: __('Divider', 'bigbite-image-comparison'),\n      colorValue: dividerColour?.color || customDividerColour,\n      /**\n       * Updates dividerColour and customDividerColour attributes\n       *\n       * @param {string} value Colour value\n       */\n      onColorChange: (value = '') => {\n        setDividerColour(value);\n        setAttributes({ customDividerColour: value });\n      },\n    },\n    {\n      label: __('Divider Box', 'bigbite-image-comparison'),\n      colorValue: dividerBoxColour?.color || customDividerBoxColour,\n      /**\n       * Updates dividerBoxColour and customDividerBoxColour attributes\n       *\n       * @param {string} value Colour value\n       */\n      onColorChange: (value = '') => {\n        setDividerBoxColour(value);\n        setAttributes({ customDividerBoxColour: value });\n      },\n    },\n    {\n      label: __('Divider Icon', 'bigbite-image-comparison'),\n      colorValue: dividerIconColour?.color || customDividerIconColour,\n      /**\n       * Updates dividerIconColour and customDividerIconColour attributes\n       *\n       * @param {string} value Colour value\n       */\n      onColorChange: (value = '') => {\n        setDividerIconColour(value);\n        setAttributes({ customDividerIconColour: value });\n      },\n    },\n  ];\n\n  if (hasCaption) {\n    colourSettings?.push(\n      {\n        label: __('Caption Text', 'bigbite-image-comparison'),\n        colorValue: captionTextColour?.color || customCaptionTextColour,\n        /**\n         * Updates captionTextColour and customCaptionTextColour attributes\n         *\n         * @param {string} value Colour value\n         */\n        onColorChange: (value) => {\n          setCaptionTextColour(value);\n          setAttributes({ customCaptionTextColour: value });\n        },\n      },\n      {\n        label: __('Caption Background', 'bigbite-image-comparison'),\n        colorValue: captionBackgroundColour?.color || customCaptionBackgroundColour,\n        /**\n         * Updates captionBackgroundColour and customCaptionBackgroundColour attributes\n         *\n         * @param {string} value Colour value\n         */\n        onColorChange: (value) => {\n          setCaptionBackgroundColour(value);\n          setAttributes({ customCaptionBackgroundColour: value });\n        },\n      },\n    );\n  }\n\n  return (\n    <>\n      <InspectorControls>\n        <PanelBody title={__('Settings', 'bigbite-image-comparison')}>\n          <SettingsOverflow overflow={overflow} setAttributes={setAttributes} />\n          <SettingsCaption hasCaption={hasCaption} setAttributes={setAttributes} />\n          <SettingsDividerInitialPosition\n            setAttributes={setAttributes}\n            dividerInitialPosition={dividerInitialPosition}\n          />\n          <SettingsDividerAxis dividerAxis={dividerAxis} setAttributes={setAttributes} />\n        </PanelBody>\n      </InspectorControls>\n      <InspectorControls group=\"styles\">\n        <PanelBody title={__('Divider', 'bigbite-image-comparison')}>\n          <SettingsDividerThickness\n            setAttributes={setAttributes}\n            dividerThickness={dividerThickness}\n          />\n          <SettingsDividerBoxWidth\n            setAttributes={setAttributes}\n            dividerBoxWidth={dividerBoxWidth}\n          />\n          <SettingsDividerBoxHeight\n            setAttributes={setAttributes}\n            dividerBoxHeight={dividerBoxHeight}\n          />\n          <SettingsDividerBoxBorderRadius\n            setAttributes={setAttributes}\n            dividerBoxBorderRadius={dividerBoxBorderRadius}\n          />\n          <SettingsDividerIconGap dividerIconGap={dividerIconGap} setAttributes={setAttributes} />\n        </PanelBody>\n      </InspectorControls>\n      <InspectorControls group=\"color\">\n        <ColorGradientSettingsDropdown\n          colors={colors}\n          panelId={clientId}\n          settings={colourSettings}\n          hasColorsOrGradients={false}\n          __experimentalIsRenderedInSidebar\n          disableCustomColors={disableCustomColors}\n        />\n        {hasCaption && (\n          <ContrastChecker\n            textColor={customCaptionTextColour}\n            backgroundColor={customCaptionBackgroundColour}\n          />\n        )}\n      </InspectorControls>\n    </>\n  );\n};\n\nconst colourAttributes = {\n  dividerColour: 'divider-colour',\n  dividerBoxColour: 'divider-box-colour',\n  dividerIconColour: 'divider-icon-colour',\n  captionTextColour: 'caption-text-colour',\n  captionBackgroundColour: 'caption-background-colour',\n};\n\nexport default withColors(colourAttributes)(Settings);\n","/**\n * External dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Container divider\n */\nconst ContainerDivider = () => (\n  <div className=\"wp-block-bigbite-image-comparison__divider\">\n    <button type=\"button\" aria-label={__('Divider Button', 'bigbite-image-comparison')}>\n      <span />\n      <span />\n    </button>\n  </div>\n);\n\nexport default ContainerDivider;\n","/**\n * Internal dependencies\n */\nimport ContainerDivider from './ContainerDivider';\n\n/**\n * Container for item inner blocks\n *\n * @param {object} props          Component props\n * @param {object} props.children Children elements\n */\nconst Container = ({ children }) => (\n  <div className=\"wp-block-bigbite-image-comparison__container\">\n    {children}\n    <ContainerDivider />\n  </div>\n);\n\nexport default Container;\n","/**\n * External dependencies\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport Edit from './components/Edit';\nimport Save from './components/Save';\nimport './styles/editor.scss';\nimport metadata from '../../../inc/blocks/image-comparison/block.json';\n\nregisterBlockType(metadata.name, {\n  edit: Edit,\n  save: Save,\n});\n","/**\n * External dependencies\n */\nimport { useInnerBlocksProps, useBlockProps } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport Caption from './Caption';\nimport Settings from './Settings';\nimport Container from './Container';\n\n/**\n * Block edit function\n *\n * @param {object}   props               Component props\n * @param {object}   props.attributes    Block attributes\n * @param {function} props.setAttributes Update block attributes\n * @param {string}   props.clientId      Block client ID\n */\nconst Edit = ({ attributes, setAttributes, clientId }) => {\n  const {\n    overflow,\n    dividerInitialPosition,\n    dividerAxis,\n    dividerThickness,\n    dividerColour,\n    customDividerColour,\n    dividerBoxColour,\n    customDividerBoxColour,\n    dividerBoxWidth,\n    dividerBoxHeight,\n    dividerBoxBorderRadius,\n    dividerIconColour,\n    customDividerIconColour,\n    dividerIconGap,\n    hasCaption,\n    caption,\n    captionTextColour,\n    customCaptionTextColour,\n    captionBackgroundColour,\n    customCaptionBackgroundColour,\n  } = attributes;\n\n  const innerBlockSettings = {\n    template: [['bigbite/image-comparison-item'], ['bigbite/image-comparison-item']],\n    templateLock: 'inserter',\n    orientation: dividerAxis === 'horizontal' ? 'vertical' : 'horizontal',\n  };\n\n  const blockProps = useBlockProps({\n    style: {\n      '--bigbite-image-comparison-overflow': overflow ? 'visible' : 'hidden',\n      '--bigbite-image-comparison-divider-initial-position': dividerInitialPosition,\n      '--bigbite-image-comparison-divider-thickness': dividerThickness,\n      '--bigbite-image-comparison-divider-box-width': dividerBoxWidth,\n      '--bigbite-image-comparison-divider-box-height': dividerBoxHeight,\n      '--bigbite-image-comparison-divider-box-border-radius': dividerBoxBorderRadius?.top,\n      '--bigbite-image-comparison-divider-icon-gap': dividerIconGap,\n      '--bigbite-image-comparison-divider-colour': dividerColour\n        ? `var( --wp--preset--color--${dividerColour}, ${customDividerColour} )`\n        : customDividerColour,\n      '--bigbite-image-comparison-divider-box-colour': dividerBoxColour\n        ? `var( --wp--preset--color--${dividerBoxColour}, ${customDividerBoxColour} )`\n        : customDividerBoxColour,\n      '--bigbite-image-comparison-divider-icon-colour': dividerIconColour\n        ? `var( --wp--preset--color--${dividerIconColour}, ${customDividerIconColour} )`\n        : customDividerIconColour,\n      '--bigbite-image-comparison-caption-text-colour': captionTextColour\n        ? `var( --wp--preset--color--${captionTextColour}, ${customCaptionTextColour} )`\n        : customCaptionTextColour,\n      '--bigbite-image-comparison-caption-background-colour': captionBackgroundColour\n        ? `var( --wp--preset--color--${captionBackgroundColour}, ${customCaptionBackgroundColour} )`\n        : customCaptionBackgroundColour,\n    },\n    className: {\n      'wp-block-bigbite-image-comparison--horizontal': dividerAxis === 'horizontal',\n    },\n  });\n\n  const { children, ...innerBlocksProps } = useInnerBlocksProps(blockProps, innerBlockSettings);\n\n  return (\n    <>\n      <Settings attributes={attributes} setAttributes={setAttributes} clientId={clientId} />\n      {/* eslint-disable-next-line react/jsx-props-no-spreading -- recommended usage of innerBlockProps */}\n      <figure {...innerBlocksProps}>\n        <Container>{children}</Container>\n        {hasCaption && <Caption caption={caption} setAttributes={setAttributes} />}\n      </figure>\n    </>\n  );\n};\n\nexport default Edit;\n","/**\n * External dependencies\n */\nimport { useInnerBlocksProps } from '@wordpress/block-editor';\n\n/**\n * Block save function\n */\nconst Save = () => {\n  const innerBlocks = useInnerBlocksProps.save();\n\n  return innerBlocks?.children;\n};\n\nexport default Save;\n","/**\n * External dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Button, Flex, FlexItem } from '@wordpress/components';\nimport { MediaUpload, MediaUploadCheck } from '@wordpress/block-editor';\n\n/**\n * Renders image in various states\n *\n * @param {object}   props                 Component props\n * @param {object}   props.blockProps      Block generated props\n * @param {number}   props.id              Selected image id\n * @param {string}   props.url             Selected image url\n * @param {string}   props.alternativeText Alternative image text\n * @param {function} props.setAttributes   Update block attributes\n */\nconst Image = ({ blockProps, id, url, alternativeText, setAttributes }) => {\n  if (id && url) {\n    // eslint-disable-next-line react/jsx-props-no-spreading -- recommended usage of blockProps\n    return <img {...blockProps} src={url} alt={alternativeText} />;\n  }\n\n  return (\n    // eslint-disable-next-line react/jsx-props-no-spreading -- recommended usage of blockProps\n    <div {...blockProps}>\n      <MediaUploadCheck>\n        <MediaUpload\n          value={id}\n          allowedTypes={['image']}\n          onSelect={(media) => setAttributes({ id: media?.id, url: media?.url })}\n          render={({ open }) => (\n            <Flex\n              className=\"wp-block-bigbite-image-comparison-item__uploader\"\n              direction=\"column\"\n              justify=\"center\"\n            >\n              <FlexItem>\n                <Button variant=\"primary\" onClick={open}>\n                  {__('Select Image', 'bigbite-image-comparison')}\n                </Button>\n              </FlexItem>\n            </Flex>\n          )}\n        />\n      </MediaUploadCheck>\n    </div>\n  );\n};\n\nexport default Image;\n","/**\n * External dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { TextareaControl } from '@wordpress/components';\n\n/**\n * Renders alternative text controls\n *\n * @param {object}   props                 Component props\n * @param {number}   props.id              Selected image id\n * @param {string}   props.alternativeText Alternative image text\n * @param {function} props.setAttributes   Update block attributes\n */\nconst AlternativeText = ({ id, alternativeText, setAttributes }) => (\n  <TextareaControl\n    disabled={!id}\n    maxLength={150}\n    value={alternativeText}\n    label={__('Alternative Text', 'bigbite-image-comparison')}\n    onChange={(value) => setAttributes({ alternativeText: value })}\n    help={__(\n      \"Please describe the image. If left blank, the image's original alternative text will be used, if available.\",\n      'bigbite-image-comparison',\n    )}\n  />\n);\n\nexport default AlternativeText;\n","/**\n * External dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { PanelBody, PanelRow } from '@wordpress/components';\nimport { InspectorControls, BlockControls, MediaReplaceFlow } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport Image from './Image';\nimport AlternativeText from './AlternativeText';\n\n/**\n * Renders block inspector controls sidebar\n *\n * @param {object}   props               Component props\n * @param {object}   props.attributes    Block attributes\n * @param {function} props.setAttributes Update block attributes\n */\nconst Settings = ({ attributes, setAttributes }) => (\n  <>\n    <InspectorControls>\n      <PanelBody\n        title={__('Settings', 'bigbite-image-comparison')}\n        className=\"wp-block-bigbite-image-comparison-item__settings\"\n      >\n        <PanelRow>\n          <Image\n            id={attributes?.id}\n            url={attributes?.url}\n            setAttributes={setAttributes}\n            alternativeText={attributes?.alternativeText}\n          />\n        </PanelRow>\n        <PanelRow>\n          <AlternativeText\n            id={attributes?.id}\n            setAttributes={setAttributes}\n            alternativeText={attributes?.alternativeText}\n          />\n        </PanelRow>\n      </PanelBody>\n    </InspectorControls>\n    <BlockControls group=\"other\">\n      <MediaReplaceFlow\n        accept=\"image/*\"\n        mediaId={attributes?.id}\n        allowedTypes={['image']}\n        mediaURL={attributes?.url}\n        onSelect={(media) => setAttributes({ id: media?.id, url: media?.url })}\n        name={\n          attributes?.id && attributes?.url\n            ? __('Replace', 'bigbite-image-comparison')\n            : __('Select Image', 'bigbite-image-comparison')\n        }\n      />\n    </BlockControls>\n  </>\n);\n\nexport default Settings;\n","/**\n * External dependencies\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport Edit from './components/Edit';\nimport './styles/editor.scss';\nimport metadata from '../../../inc/blocks/image-comparison-item/block.json';\n\nregisterBlockType(metadata.name, {\n  edit: Edit,\n  save: () => null, // eslint-disable-line jsdoc/require-jsdoc -- not necessary\n});\n","/**\n * External dependencies\n */\nimport { useBlockProps } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport Image from './Image';\nimport Settings from './Settings';\n\n/**\n * Block edit function\n *\n * @param {object}   props               Component props\n * @param {object}   props.attributes    Block attributes\n * @param {function} props.setAttributes Update block attributes\n */\nconst Edit = ({ attributes, setAttributes }) => {\n  const blockProps = useBlockProps();\n\n  return (\n    <>\n      <Settings attributes={attributes} setAttributes={setAttributes} />\n      <Image\n        id={attributes?.id}\n        url={attributes?.url}\n        blockProps={blockProps}\n        setAttributes={setAttributes}\n      />\n    </>\n  );\n};\n\nexport default Edit;\n"],"names":["window","_ref","caption","setAttributes","React","createElement","RichText","value","disableLineBreaks","identifier","tagName","allowedFormats","className","onChange","placeholder","__","hasCaption","ToggleControl","checked","label","help","overflow","dividerAxis","ToggleGroupControl","isBlock","ToggleGroupControlOption","dividerIconGap","RangeControl","min","step","max","initialPosition","dividerBoxWidth","dividerBoxHeight","dividerThickness","dividerInitialPosition","dividerBoxBorderRadius","top","right","bottom","left","withColors","dividerColour","dividerBoxColour","dividerIconColour","captionTextColour","captionBackgroundColour","attributes","customDividerColour","customDividerBoxColour","customDividerIconColour","customCaptionTextColour","customCaptionBackgroundColour","clientId","setDividerColour","setDividerBoxColour","setDividerIconColour","setCaptionTextColour","setCaptionBackgroundColour","colors","disableCustomColors","useMultipleOriginColorsAndGradients","colourSettings","colorValue","color","onColorChange","arguments","length","undefined","push","Fragment","InspectorControls","PanelBody","title","SettingsOverflow","SettingsCaption","SettingsDividerInitialPosition","SettingsDividerAxis","group","SettingsDividerThickness","SettingsDividerBoxWidth","SettingsDividerBoxHeight","SettingsDividerBoxBorderRadius","SettingsDividerIconGap","ColorGradientSettingsDropdown","panelId","settings","hasColorsOrGradients","__experimentalIsRenderedInSidebar","ContrastChecker","textColor","backgroundColor","ContainerDivider","type","children","registerBlockType","metadata","edit","innerBlockSettings","template","templateLock","orientation","blockProps","useBlockProps","style","innerBlocksProps","useInnerBlocksProps","Settings","Container","Caption","save","Save","innerBlocks","id","url","alternativeText","_extends","src","alt","MediaUploadCheck","MediaUpload","allowedTypes","onSelect","media","render","_ref2","open","Flex","direction","justify","FlexItem","Button","variant","onClick","TextareaControl","disabled","maxLength","PanelRow","Image","AlternativeText","BlockControls","MediaReplaceFlow","accept","mediaId","mediaURL","name"],"sourceRoot":""}